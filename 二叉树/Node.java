package 二叉树;
//树的表现形式
//孩子兄弟表示法
public class Node {
    int val;
    Node left;
    Node right;

    public Node(int x) {
        this.val = x;
    }
}

/*
结点的度：一个结点含有的子树的个数称为结点的度
数的度：一颗树中，最大的结点的度称为树的度
叶子结点或者终端结点：度为0的结点称为叶子结点
双亲结点或父节点：一个结点含有子节点，那么他称为这个子节点的父节点
孩子结点：一个结点含有的子树的根节点称为该结点的子节点。
根节点：一棵树中，没有父节点的结点
结点的层次：从根节点开始算起，根部为第层，根的子节点称为第二层。。
树的高度或者深度：树中结点最大的层次。


树一般应用于文件管理系统（目录和文件）


二叉树：
一颗二叉树的结点是一个有限集合，该集合或者为空，或者有一个根节点加上两个
别称为左子树的二叉树组成。
特点：
1.每个节点最多有两颗子树，即二叉树不存在度大于2的结点
2，二叉树的子树有左右之分，其子树的次序不能颠倒。


完全二叉树：是一种效率很高的数据结构，完全二叉树由满二叉树印出来，对于深度为k的
，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1到n的结点
一一对应时称之为完全二叉树，满二叉树是一种特殊的完全二叉树。
满二叉树：一个二叉树如果每一层的结点个数都达到最大值，则这个二叉树就是满二叉树，也就是说，如果
一个二叉树的层数为k,且结点总数是（2^k）-1.


 */